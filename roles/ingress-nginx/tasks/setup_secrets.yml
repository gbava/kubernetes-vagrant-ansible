---
- name: Create directory for openssl certs
  file:
    path: "{{ deployment_dir }}/ssl/certs"
    state: directory
    mode: 0700

- name: Check if tls secret "tls-certificate" already exists
  shell: kubectl get secrets | grep tls-certificate
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
  register: check_tls_secret
  ignore_errors: true

- name: Generate SSL key and certificate
  shell: |
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
      -keyout {{ deployment_dir }}/ssl/certs/nginx-selfsigned.key \
      -out {{ deployment_dir }}/ssl/certs/nginx-selfsigned.crt \
      -subj "/CN={{ app_name }}.{{ fqdn }}"
  when: check_tls_secret|failed

- name: Create tls secret
  shell: kubectl create secret tls tls-certificate --key {{ deployment_dir }}/ssl/certs/nginx-selfsigned.key --cert {{ deployment_dir }}/ssl/certs/nginx-selfsigned.crt
  when: check_tls_secret|failed

- name: Check if "tls-dhparam" secret already exists
  shell: kubectl get secrets | grep tls-dhparam
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
  register: check_dhparam_secret
  ignore_errors: true

- name: Generate X bit dhparam.pem file (this may take a while)
  shell: openssl dhparam -out {{ deployment_dir }}/ssl/certs/dhparam.pem 2048
  when: check_tls_secret|failed

# Fixme
- name: Create tls-dhparam secret
  shell: kubectl create secret generic tls-dhparam --from-file="{{ deployment_dir }}/ssl/certs/dhparam.pem"
  when: check_dhparam_secret|failed